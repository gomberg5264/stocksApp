{"version":3,"sources":["icons/nse.jpg","firebase/config.ts","store/actions/listAction.ts","components/theme/Theme.tsx","store/actions/authActions.ts","store/types.ts","components/sections/Header.tsx","components/UI/Input.tsx","components/UI/Button.tsx","components/UI/Message.tsx","components/pages/SignUp.tsx","components/pages/SignIn.tsx","components/pages/ForgotPassword.tsx","components/pages/HomePage.tsx","components/UI/Modal.tsx","components/UI/ModalButton.tsx","components/sections/StockItem.tsx","components/sections/Stocks.tsx","components/sections/ListItem.tsx","components/sections/Portfolio.tsx","components/pages/Dashboard.tsx","components/auth/PrivateRoute.tsx","components/auth/PublicRoute.tsx","components/UI/Loader.tsx","App.tsx","store/reducers/authReducer.ts","store/reducers/listReducer.ts","store/index.ts","index.tsx"],"names":["module","exports","firebase","apps","length","initializeApp","apiKey","process","appId","authDomain","databaseURL","measurementId","messagingSenderId","projectId","storageBucket","actionTypes","ThemeContext","React","createContext","dark","toggle","lightTheme","darkTheme","ThemeProvider","children","prefersDark","window","matchMedia","matches","useState","setDark","useLayoutEffect","applyTheme","theme","document","getElementsByTagName","style","cssText","join","Provider","value","console","log","getUserById","id","dispatch","a","firestore","collection","doc","get","user","exists","userData","data","type","payload","setLoading","logout","auth","signOut","setError","msg","setSuccess","sendPasswordResetEmail","email","successMsg","message","Header","useContext","history","useHistory","useDispatch","authenticated","useSelector","state","className","to","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","onClick","width","height","push","Input","placeholder","name","onChange","label","htmlFor","color","required","autoComplete","Button","text","disabled","Message","typeClass","SignUp","firstName","setFirstName","setEmail","password","setPassword","loading","error","useEffect","onSubmit","e","onError","preventDefault","createUserWithEmailAndPassword","res","uid","createdAt","FieldValue","serverTimestamp","set","sendEmailVerification","currentTarget","SignIn","signInWithEmailAndPassword","ForgotPassword","success","submitHandler","Homepage","h2","initial","y","animate","transition","stiffness","delay","h5","div","opacity","backdrop","visible","hidden","modal","SignInModal","showModal","variants","exit","NiftyModal","showNiftyModal","setNiftyShowModal","users","color-interpolation-filters","values","advances","declines","latestData","yHigh","yLow","high","low","yCls","open","StockItemModal","showStockModal","setStockShowModal","iislPtsChange","iislPercChange","wkhi","wklo","trdVol","ntP","addList","item","ADD","deleteList","idx","DELETE","PortfolioStockModalButton","symbol","Fragment","colorInterpolationFilters","stroke","fillRule","data-name","prevValue","StockItemModalButton","NiftyModalButton","StockItem","key","undefined","dayEndClose","ptsC","per","ltP","yPC","Stocks","map","src","nse","alt","ch","ltp","time","ListItem","list","Portfolio","Dashboard","needVerification","setShowModal","setUserList","axios","headers","then","response","PrivateRoute","Component","component","rest","render","props","PublicRoute","Loader","App","unsubscribe","onAuthStateChanged","emailVerified","Theme","path","exact","initialState","rootReducer","combineReducers","action","temp","i","oldList","splice","newList","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0a6dcc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nse.c0005ab4.jpg\";","import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  });\n}\n// firebase.initializeApp(firebaseConfig);\nexport default firebase;","import { action } from \"typesafe-actions\";\n\nexport enum actionTypes {\n  ADD = \"ADD\",\n  DELETE = \"DELETE\"\n}\n\nexport const addList = (item: any) => {\n  return {\n    type: actionTypes.ADD,\n    payload: item\n  }\n} \n\nexport const deleteList = (idx: any) => {\n  return {\n    type: actionTypes.DELETE,\n    payload: idx\n  }\n} \n\nexport const todoActions = {\n  add: (item: any) => action(actionTypes.ADD, item),\n  delete: (idx: number) => action(actionTypes.DELETE, idx)\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import {\n//    IStockItemList, ADD_STOCKLIST, StockListAction, GET_STOCKLIST,\n//   GET_STOCKLIST_BY_ID, SET_STOCKLISTID_TO_DELETE, DELETE_STOCKLIST,\n//   IStockItem, ADD_STOCK,IStocks\n// } from '../types';\n\n// export const addStock = (list: IStocks): StockListAction => {\n//   return {\n//     type: ADD_STOCK,\n//     payload: list\n//   }\n// }\n\n// export const getStock = (): StockListAction => {\n//   return {\n//     type: GET_STOCKLIST\n//   }\n// }\n\n// export const getStockById = (symbol: string): StockListAction => {\n//   return {\n//     type: GET_STOCKLIST_BY_ID,\n//     payload: symbol\n//   }\n// }\n\n// export const setStockIdToDelete = (symbol: string): StockListAction => {\n//   return {\n//     type: SET_STOCKLISTID_TO_DELETE,\n//     payload: symbol\n//   }\n// }\n\n// export const deleteStock = (symbol: string): StockListAction => {\n//   return {\n//     type: DELETE_STOCKLIST,\n//     payload: symbol\n//   }\n// }\n\n\n// export const addStockList = (stock: IStockItem, list: IStocks): StockListAction => {\n//   return {\n//     type: ADD_STOCKLIST,\n//     payload: {\n//       stock,\n//       list\n//     }\n//   }\n// }","import React, {FC, useState, useLayoutEffect } from \"react\";\n\ninterface IThemeType  {\n  children: React.ReactNode\n}\n\nexport const ThemeContext = React.createContext({\n  dark: false,\n  /* tslint:disable:no-empty */\n  toggle: () => {}\n});\n\nconst ThemeProvider:FC<IThemeType> = ({ children }) => {\n  // keeps state of the current theme\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\n  const [dark, setDark] = useState(prefersDark);\n\n  // paints the app before it renders elements\n  useLayoutEffect(() => {\n    // Media Hook to check what theme user prefers\n    applyTheme();\n    // if state changes, repaints the app\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dark]);\n\n  // rewrites set of css variablels/colors\n  const applyTheme = () => {\n    let theme;\n    if (dark) {\n      theme = darkTheme;\n    }\n    if (!dark) {\n      theme = lightTheme;\n    }\n\n    const root = document.getElementsByTagName(\"html\")[0];\n    root.style.cssText = theme?.join(\";\")!;\n  };\n\n  const toggle = () => {\n    console.log(\"Toggle Method Called\");\n\n    // A smooth transition on theme switch\n    const body = document.getElementsByTagName(\"body\")[0];\n    body.style.cssText = \"transition: background .5s ease\";\n\n    setDark(!dark);\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        dark,\n        toggle\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\n// styles\nconst lightTheme = [\n  \"--bg-color: var(--color-white)\",\n  \"--bg-color-hp: var(--bg-color-hp-primary)\",\n  \"--bg-navbar: var(--bg-navbar-primary)\",\n  \"--bg-logo: var(--bg-logo-primary)\",\n  \"--home-title: var(--home-title-primary)\",\n  \"--sign-btn: var(--sign-btn-primary)\",\n  \"--sign-btn-fontColor: var(--sign-btn-fontColor-primary)\",\n  \"--navLink-text: var(--navLink-text-primary)\",\n  \"--logoTitle: var(--logoTitle-primary)\",\n  \"--border: var(--border-primary)\",\n];\n\nconst darkTheme = [\n  \"--bg-color: var(--color-blue)\",\n  \"--bg-color-hp: var(--bg-color-hp-secondary)\",\n  \"--bg-navbar: var(--bg-navbar-secondary)\",\n  \"--bg-logo: var(--bg-logo-secondary)\",\n  \"--home-title: var(--home-title-secondary)\",\n  \"--sign-btn: var(--sign-btn-secondary)\",\n  \"--sign-btn-fontColor: var(--sign-btn-fontColor-secondary)\",\n  \"--navLink-text: var(--navLink-text-secondary)\",\n  \"--logoTitle: var(--logoTitle-secondary)\",\n  \"--border: var(--border-secondary)\",\n];\n\nexport default ThemeProvider;","import { ThunkAction } from 'redux-thunk';\n\nimport {\n  ISignUpData, AuthAction, SET_USER, IUser, SET_LOADING,\n  SIGN_OUT, SET_ERROR, NEED_VERIFICATION, SET_SUCCESS, ISignInData,\n} from '../types';\nimport { RootState } from '..';\nimport firebase from '../../firebase/config';\n\n// CReate USer\nexport const signup = (data: ISignUpData, onError: () => void): ThunkAction<void, RootState, null, AuthAction> => {\n  return async dispatch => {\n    try {\n      const res = await firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n      if (res.user) {\n        const userData: IUser = {\n          email: data.email,\n          firstName: data.firstName,\n          id: res.user.uid,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        };\n        await firebase.firestore().collection('/users').doc(res.user.uid).set(userData);\n        await res.user.sendEmailVerification();\n        dispatch({\n          type: NEED_VERIFICATION\n        })\n        dispatch({\n          type: SET_USER,\n          payload: userData\n        })\n      }\n    }\n    catch (err) {\n      console.log(err);\n      onError();\n      dispatch({\n        type: SET_ERROR,\n        payload: err.message\n      })\n    }\n  }\n}\n\n// GEt USer BY ID\n\nexport const getUserById = (id: string): ThunkAction<void, RootState, null, AuthAction> => { \n  return async dispatch => {\n    try {\n      const user = await firebase.firestore().collection('users').doc(id).get();\n      if (user.exists) {\n        const userData = user.data() as IUser;\n        dispatch({\n          type: SET_USER,\n          payload: userData\n        })\n      }\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n}\n\n// SEt LOading\n\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, AuthAction> => { \n  return dispatch => {\n    dispatch({\n      type: SET_LOADING,\n      payload: value\n    })\n  }\n}\n\n// SIgn In\n\n\nexport const signin = (data: ISignInData, onError: () => void): ThunkAction<void, RootState, null, AuthAction> => {\n  return async dispatch => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\n    }\n    catch (err) {\n      console.log(err);\n      onError();\n      dispatch(setError(err.message));\n    }\n  }\n}\n\n// Sign OUt\n\nexport const logout = (): ThunkAction<void, RootState, null, AuthAction> => { \n  return async dispatch => {\n    try {\n      dispatch(setLoading(true));\n      await firebase.auth().signOut();\n      dispatch({\n        type: SIGN_OUT\n      });\n    }\n    catch (err) {\n      console.log(err);\n      dispatch(setLoading(false));\n    }\n  }\n}\n\n// SEr ERror\n\nexport const setError = (msg: string): ThunkAction<void, RootState, null, AuthAction> => { \n  return dispatch => {\n    dispatch({\n      type: SET_ERROR,\n      payload: msg\n    });\n  }\n}\n\n// SEt NEed VErification\n\nexport const setNeedVerification = (): ThunkAction<void, RootState, null, AuthAction> => { \n  return dispatch => {\n    dispatch({\n      type: NEED_VERIFICATION\n    });\n  }\n}\n\n// SEt SUccess\n\nexport const setSuccess = (msg: string): ThunkAction<void, RootState, null, AuthAction> => { \n  return dispatch => {\n    dispatch({\n      type: SET_SUCCESS,\n      payload: msg\n    });\n  }\n}\n\n// SEnd PAssword REset EMail\n\nexport const sendPasswordResetEmail = (email: string, successMsg: string): ThunkAction<void, RootState, null, AuthAction> => { \n  return async dispatch => {\n    try {\n      await firebase.auth().sendPasswordResetEmail(email);\n      dispatch(setSuccess(successMsg));\n    }\n    catch (err) {\n      console.log(err);\n      dispatch(setError(err.message));\n    }\n  }\n}\n\n","export const SET_USER = 'SET_USER';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ERROR = 'SET_ERROR';\nexport const NEED_VERIFICATION = 'NEED_VERIFICATION';\nexport const SET_SUCCESS = 'SET_SUCCESS';\n/* ********************************************************************************************* To-Do*/\nexport const ADD_STOCK = 'ADD_STOCK';\nexport const GET_STOCK = 'GET_STOCK';\nexport const DELETE_STOCK = 'DELETE_STOCK';\nexport const ADD_STOCKLIST = 'ADD_STOCKLIST';\nexport const GET_STOCKLIST = 'GET_STOCKLIST';\nexport const GET_STOCKLIST_BY_ID = 'GET_STOCKLIST_BY_ID';\nexport const DELETE_STOCKLIST = 'DELETE_STOCKLIST';\nexport const SET_STOCKLISTID_TO_DELETE = 'SET_STOCKLISTID_TO_DELETE';\n/* ******************************************************************************************/\nexport const GET_LISTS = 'GET_LISTS';\nexport const GET_LIST_BY_ID = 'GET_LIST_BY_ID';\nexport const ADD_LIST = 'ADD_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const SET_LISTID_TO_DELETE = 'SET_LISTID_TO_DELETE';\nexport const SET_LIST_TO_EDIT = 'SET_LIST_TO_EDIT';\nexport const SET_SELECTED_LIST = 'SET_SELECTED_LIST';\n\nexport const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const SET_TASK_TO_DELETE = 'SET_TASK_TO_DELETE';\nexport const UNSET_TASK_TO_DELETE = 'UNSET_TASK_TO_DELETE';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const SET_TASK_TO_EDIT = 'SET_TASK_TO_EDIT';\nexport const UNSET_TASK_TO_EDIT = 'UNSET_TASK_TO_EDIT';\n\nexport const SET_NOTIFICATION = 'SET_NOTIFICATION';\n/******************************************************************************************************* */      \n\n/* To-Do Interfaces *******************************************************************************************************/\n\nexport interface ITask {\n  name: string;\n  id: string;\n  completed: boolean;\n}\n\nexport interface IList {\n  name: string;\n  id: string;\n  tasks: ITask[];\n}\n\nexport interface ILists {\n  [id: string]: IList\n}\n\n/// ///// //// // / // / / / / /\n\n\nexport interface IStockItem {\n  cAct: string;\n\tdayEndClose: string;\n\thigh: string;\n\tiislPercChange: number;\n\tiislPtsChange: number;\n\tlow: string;\n\tltP: string;\n\tmPC: string;\n\tmVal: string;\n\tntP: string;\n\topen: string;\n\tper: string;\n\tpreviousClose: string;\n\tptsC: number;\n\tsymbol: string;\n\ttrdVol: string;\n\ttrdVolM: string;\n\twkhi: string;\n\twkhicm_adj: string;\n\twklo: string;\n\twklocm_adj: string;\n\txDt: string;\n\tyPC: number;\n}\n\nexport interface IStocks {\n  symbol: string;\n  stocks: IStockItem[];\n}\n\n\nexport interface IStockItemList {\n  [symbol: string]: IStockItem;\n}\n\n\n// /////////////////////////////////////////// Actions\n\ninterface IAddStockItemAction {\n  type: typeof ADD_STOCK;\n  payload: IStocks;\n}\n\ninterface IGetStockAction {\n  type: typeof GET_STOCK;\n}\n\ninterface IGetStockByIdAction {\n  type: typeof GET_STOCKLIST_BY_ID;\n  payload: string;\n}\n\ninterface IDeleteStockAction {\n  type: typeof DELETE_STOCK;\n  payload: string;\n}\n\ninterface IAddStocklistAction {\n  type: typeof ADD_STOCKLIST;\n  payload: {\n    stock: IStockItem,\n    list: IStockItemList\n  };\n}\n\ninterface IGetStockListAction {\n  type: typeof GET_STOCKLIST;\n}\n\ninterface ISetStockListIdToDeleteAction {\n  type: typeof SET_STOCKLISTID_TO_DELETE;\n  payload: string;\n}\n\ninterface IDeleteStockListAction {\n  type: typeof DELETE_STOCKLIST;\n  payload: string;\n}\n\nexport type StockListAction = IAddStockItemAction | IGetStockAction | IGetStockByIdAction |\n  IDeleteStockAction | IAddStocklistAction | IGetStockListAction | IDeleteStockListAction | ISetStockListIdToDeleteAction;\n\nexport interface IStockListState {\n  lists: IStockItemList;\n  listIdToDelete: string;\n  listToEdit: IStockItemList | null;\n  listById: IStockItemList | null;\n  selectedList: IStockItemList | null;\n  taskToDelete: {\n    task: IStockItem;\n    list: IStockItemList;\n  } | null;\n  taskToEdit: {\n    task: IStockItem;\n    list: IStockItemList;\n  } | null;\n}\n\n\n\n///////////////////////////////////////////////////////////////////// and more\n\ninterface IAddListAction {\n  type: typeof ADD_LIST;\n  payload: IList;\n} \n\ninterface IGetListsAction {\n  type: typeof GET_LISTS;\n}\n\ninterface IGetListByIdAction {\n  type: typeof GET_LIST_BY_ID;\n  payload: string;\n}\n\ninterface ISetListIdToDeleteAction {\n  type: typeof SET_LISTID_TO_DELETE;\n  payload: string;\n}\n\ninterface ISetListToEditAction {\n  type: typeof SET_LIST_TO_EDIT;\n  payload: string;\n}\n\ninterface IDeleteListAction {\n  type: typeof DELETE_LIST;\n  payload: string;\n}\n\ninterface IUpdateListAction {\n  type: typeof UPDATE_LIST;\n  payload: {\n    id: string;\n    name: string;\n  }\n}\n\ninterface ISetSelectedListAction {\n  type: typeof SET_SELECTED_LIST;\n  payload: string;\n}\n\ninterface IAddTaskAction {\n  type: typeof ADD_TASK;\n  payload: {\n    task: ITask;\n    list: IList;\n  }\n}\n\ninterface IDeleteTaskAction {\n  type: typeof DELETE_TASK;\n  payload: {\n    task: ITask;\n    list: IList;\n  }\n}\n\ninterface ISetTaskToDeleteAction {\n  type: typeof SET_TASK_TO_DELETE;\n  payload: {\n    task: ITask;\n    list: IList;\n  }\n}\n\ninterface IUnsetTaskToDeleteAction {\n  type: typeof UNSET_TASK_TO_DELETE;\n}\n\ninterface IEditTaskAction {\n  type: typeof UPDATE_TASK;\n  payload: {\n    taskId: string;\n    taskName: string;\n    taskState: boolean;\n    list: IList;\n  }\n}\n\ninterface ISetTaskToEditAction {\n  type: typeof SET_TASK_TO_EDIT;\n  payload: {\n    task: ITask;\n    list: IList;\n  }\n}\n\ninterface IUnsetTaskToEditAction {\n  type: typeof UNSET_TASK_TO_EDIT;\n}\n\ninterface ISetNotificationAction {\n  type: typeof SET_NOTIFICATION;\n  payload: {\n    msg: string;\n    type: string;\n  }\n}\n\nexport type ListsAction = IAddListAction | IGetListsAction | IGetListByIdAction | ISetListIdToDeleteAction | ISetListToEditAction | IDeleteListAction | IUpdateListAction | ISetSelectedListAction | IAddTaskAction | IDeleteTaskAction | ISetTaskToDeleteAction | IUnsetTaskToDeleteAction | IEditTaskAction | ISetTaskToEditAction | IUnsetTaskToEditAction;\n\nexport type NotificationAction = ISetNotificationAction;\n\nexport interface IListState {\n  lists: ILists;\n  listIdToDelete: string;\n  listToEdit: IList | null;\n  listById: IList | null;\n  selectedList: IList | null;\n  taskToDelete: {\n    task: ITask;\n    list: IList;\n  } | null;\n  taskToEdit: {\n    task: ITask;\n    list: IList;\n  } | null;\n}\n\nexport interface INotificationState {\n  message: string;\n  type: string;\n}\n\n/* To-Do                          * **********************************************************************************  */\n\n\n\nexport interface IUser {\n  firstName: string;\n  email: string;\n  id: string;\n  createdAt: any;\n}\n\nexport interface IAuthState {\n  user: IUser | null;\n  authenticated: boolean;\n  loading: boolean;\n  error: string;\n  needVerification: boolean;\n  success: string;\n}\n\nexport interface ISignUpData {\n  firstName: string;\n  email: string;\n  password: string;\n}\n\nexport interface ISignInData {\n  email: string;\n  password: string;\n}\n\n// Actions\n\ninterface ISetUserAction {\n  type: typeof SET_USER;\n  payload: IUser;\n}\n\ninterface ISetLoadingAction {\n  type: typeof SET_LOADING;\n  payload: boolean;\n}\n\ninterface ISignOutAction {\n  type: typeof SIGN_OUT;\n}\n\ninterface ISetErrorAction {\n  type: typeof SET_ERROR;\n  payload: string;\n}\n\ninterface INeedVerificationAction {\n  type: typeof NEED_VERIFICATION;\n}\n\ninterface ISetSuccessAction {\n  type: typeof SET_SUCCESS;\n  payload: string;\n}\n\nexport type AuthAction = ISetUserAction | ISetLoadingAction | ISignOutAction | ISetErrorAction | INeedVerificationAction | ISetSuccessAction;","import React,{FC, useContext} from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {ThemeContext} from '../theme/Theme';\n// import {Button} from '../UI/Button';\nimport { RootState } from '../../store';\nimport { logout } from '../../store/actions/authActions';\n// import { motion } from 'framer-motion';\n\nexport const Header: FC = ()  => {\n  const { toggle } = useContext(ThemeContext);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { authenticated } = useSelector((state: RootState) => state.auth);\n\n  const logoutClickHandler = () => {\n    dispatch(logout());\n  }\n  \n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar-nav\">\n      <li className=\"logo\">\n        <div className=\"nav-link\">\n            <span className=\"link-text logo-text \">\n              <Link className=\"title\" to={!authenticated ? \"/\" : \"/dashboard\"}>StockFolio</Link>\n            </span>\n          <svg\n            aria-hidden=\"true\"\n            focusable=\"false\"\n            data-prefix=\"fad\"\n            data-icon=\"angle-double-right\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 448 512\"\n            className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\n          >\n            <g className=\"fa-group\">\n              <path\n                fill=\"currentColor\"\n                d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\n                className=\"fa-secondary\"\n              />\n              <path\n                fill=\"currentColor\"\n                d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\n                className=\"fa-primary\"\n              />\n            </g>\n          </svg>\n        </div>\n      </li>\n\n      {!authenticated ?\n        <>\n          <li className=\"nav-item \">\n              <div className=\"nav-link\"  onClick={ () => history.push('/signup')}>\n                <svg\n                  width='24px'\n                  height='24px'\n                  viewBox=\"0 0 24 24\">\n                  <path\n                    className=\"register\"\n                    fill=\"currentColor\"\n                    d=\"M15,14C12.33,14 7,15.33 7,18V20H23V18C23,15.33 17.67,14 15,14M6,10V7H4V10H1V12H4V15H6V12H9V10M15,12A4,4 0 0,0 19,8A4,4 0 0,0 15,4A4,4 0 0,0 11,8A4,4 0 0,0 15,12Z\"\n                  />\n                </svg>\n                <span className=\"link-text\">Register</span>\n            </div>\n            </li>\n            \n            <li className=\"nav-item \">\n              <div className=\"nav-link\" onClick={ () => history.push('/signin')}>\n                <svg\n                  width='24px'\n                  height='24px'\n                  viewBox=\"0 0 24 24\">\n                  <path\n                    className=\"register\"\n                    fill=\"currentColor\"\n                    d=\"M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z\" \n                  />\n                </svg>\n                <span className=\"link-text\">Log-In</span>\n            </div>\n            </li>\n          </>\n          :        \n            <li className=\"nav-item\">\n              <div className=\"nav-link logout\" onClick={ logoutClickHandler }>\n                <svg\n                  width='24px'\n                  height='24px'\n                  viewBox=\"0 0 24 24\">\n                  <path\n                    className=\"register \"\n                    fill=\"currentColor\"\n                    d=\"M10,17V14H3V10H10V7L15,12L10,17M10,2H19A2,2 0 0,1 21,4V20A2,2 0 0,1 19,22H10A2,2 0 0,1 8,20V18H10V20H19V4H10V6H8V4A2,2 0 0,1 10,2Z\"  \n                  />\n                </svg>\n                <span className=\"link-text\">Log-Out</span>\n              </div>\n            </li>\n        }\n        \n      <li className=\"nav-item\">\n          <div className=\"nav-link logout\"\n            onClick={toggle}\n          >\n            <svg\n              width='24px'\n              height='24px'\n              viewBox=\"0 0 24 24\">\n              <path\n                className=\"register \"\n                fill=\"currentColor\"\n                d=\"M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M3.36,17L5.12,13.23C5.26,14 5.53,14.78 5.95,15.5C6.37,16.24 6.91,16.86 7.5,17.37L3.36,17M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M20.64,17L16.5,17.36C17.09,16.85 17.62,16.22 18.04,15.5C18.46,14.77 18.73,14 18.87,13.21L20.64,17M12,22L9.59,18.56C10.33,18.83 11.14,19 12,19C12.82,19 13.63,18.83 14.37,18.56L12,22Z\"   \n              />\n            </svg>\n            <span className=\"link-text\">Theme</span>\n        </div>\n      </li>   \n        \n        {/* <svg src={a} alt=\"Register\" className=\"register\"/> */}\n            {/* <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              data-name=\"Layer 1\" \n              viewBox=\"0 0 64 64\"\n            >\n              <path fill=\"currentColor\" stroke=\"#000\" \n                className=\"register\"\n                stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                stroke-width=\"2\" \n                d=\"M35,56H29a2,2,0,0,1-2-2h0a2,2,0,0,1,2-2h6a2,2,0,0,1,2,2h0A2,2,0,0,1,35,56Z\"\n              />\n              <rect width=\"36\" height=\"5\" x=\"14\" y=\"42\" fill=\"currentColor\" \n              stroke=\"#000\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" \n              stroke-width=\"2\"\n              />\n              <rect width=\"36\" height=\"5\" x=\"14\" y=\"33\" \n              fill=\"currentColor\" stroke=\"#000\"\n              stroke-linecap=\"round\" \n              stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                className=\"register\"\n              />\n              <path fill=\"currentColor\" \n              stroke=\"#000\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" \n              stroke-width=\"2\"\n              d=\"M26.39,28V25.8A3.81,3.81,0,0,1,30.2,22h2.\n              39a3.8,3.8,0,0,1,3.8,3.8V28\"\n              />\n              <circle cx=\"31.39\" cy=\"15\" r=\"3\" \n              fill=\"currentColor\" stroke=\"#000\"\n              stroke-linecap=\"round\" \n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              />\n              <line x1=\"23.39\" x2=\"39.39\" y1=\"28\"\n              y2=\"28\" fill=\"white\" \n              stroke=\"#000\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" \n              stroke-width=\"2\"\n              />\n              <path fill=\"none\" stroke=\"#fff\" \n              stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" stroke-width=\"2\"\n                className=\"register\"\n              d=\"M56,16V56a4,4,0,0,1-4,4H12a4,4,0,0,1-4-4V11a4,4,0,0,1,4-4H47\"\n              />\n              <line x1=\"51\" x2=\"61\"\n              y1=\"7\" y2=\"7\" fill=\"currentColor\" stroke=\"#000\" \n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" stroke-width=\"2\"\n              />\n              <line x1=\"56\" x2=\"56\" y1=\"2\"\n                y2=\"12\" fill=\"currentColor\" stroke=\"#000\" \n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" stroke-width=\"2\"\n              />\n            </svg> */}\n        \n\n      \n   \n      </ul>\n \n\n    </nav>\n  );\n}\n","import React, { FC, InputHTMLAttributes } from 'react';\n\ninterface IInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  type: string;\n}\n\nexport const Input: FC<IInputProps> = ({ type, placeholder, value, name, onChange, label }) => {\n  return (\n      <div className='control block-cube block-input'>\n        <label htmlFor={name}>{label}</label>\n        <input \n          className=\"input\"\n          color=\"red\"\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          name={name}\n          id={name}\n          onChange={onChange}\n          required={true}\n          autoComplete=\"off\"\n        />\n        <div className='bg-top'>\n          <div className='bg-inner'/>\n        </div>\n        <div className='bg-right'>\n          <div className='bg-inner'/>\n        </div>\n        <div className='bg'>\n          <div className='bg-inner'/>\n        </div>\n      </div>\n  );\n}\n\n\n","import React, { FC,ButtonHTMLAttributes} from 'react'\n\ninterface IButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>{\n  text: string;\n  classname?: string;\n}\n\nexport const Button: FC<IButtonProps> = ({text,className,onClick,type,disabled}) => {\n  return (\n    <button type={type} className=\"btn\" onClick={onClick} disabled={disabled}>\n      {text}\n      {/* <div className='bg-top'>\n            <div className='bg-inner'/>\n          </div>\n          <div className='bg-right'>\n            <div className='bg-inner'/>\n          </div>\n          <div className='bg'>\n            <div className='bg-inner'/>\n          </div>\n          <div className='text'>\n          </div> */}\n    </button>\n    );\n}","import React, { FC} from 'react'\n\ninterface IMessageProps {\n  msg: string;\n  type: 'danger' | 'success';\n}\n\nexport const Message: FC<IMessageProps> = ({msg,type}) => {\n  let typeClass = '';\n  \n  if (type === 'danger') {\n    typeClass = 'msg__cont';\n  }\n\n  if (type === 'success') {\n    typeClass = 'success';\n  }\n  \n  return (\n    <article className={typeClass}>\n      <div className=\"msg__cont__body\">{msg}</div>\n    </article>\n  );  \n}\n","import React,{FC, useState, FormEvent, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Input } from '../UI/Input';\nimport { Button } from '../UI/Button';\nimport { Message } from '../UI/Message';\nimport { signup,setError } from '../../store/actions/authActions';\nimport { RootState } from '../../store';\n\nexport const SignUp: FC = () => {\n  const [firstName, setFirstName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const { error } = useSelector((state: RootState) => state.auth);\n\n  useEffect(() => {\n    return () => {\n      if (error) {\n        dispatch(setError(''));\n      }\n    }\n  }, [error, dispatch]);\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    dispatch(signup({ email, password, firstName }, () => setLoading(false)));\n  }\n\n  return (\n    <div className=\"signup__container\">\n    <section className=\"section\">\n      <div className=\"container\">\n        <h2 className=\"has-text-centered is-size-2 mb-3\">Sign Up</h2>\n        <form className=\"form\" onSubmit={submitHandler}>\n          {error && <Message type=\"danger\" msg={error} />}\n          <Input\n            name=\"firstName\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.currentTarget.value)}\n            placeholder=\"First Name\"\n            label=\"First name\"\n            type=\"text\"\n          />\n           <Input\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.currentTarget.value)}\n            placeholder=\"Email address\"\n            label=\"Email address\"\n            type=\"text\"\n          />\n           <Input\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.currentTarget.value)}\n            placeholder=\"Password\"\n            label=\"Password\"\n            type=\"password\"\n          />\n          <Button text={loading ? \"Loading...\" : \"Sign Up\"} className=\"is-primary is-fullwidth mt-5\" disabled={loading} />\n        </form>\n      </div>\n      </section>\n      </div>\n    );\n}","import React,{FC, useState, FormEvent, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Input } from '../UI/Input';\nimport { Button } from '../UI/Button';\nimport { Message } from '../UI/Message';\nimport { signin,setError } from '../../store/actions/authActions';\nimport { RootState } from '../../store';\n\nexport const SignIn: FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const { error } = useSelector((state: RootState) => state.auth);\n\n  useEffect(() => {\n    return () => {\n      if (error) {\n        dispatch(setError(''));\n      }\n    }\n  }, [error, dispatch]);\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    dispatch(signin({ email, password }, () => setLoading(false)));\n  }\n\n  return (\n    <div className=\"signup__container\">\n    <section className=\"section\">\n      <div className=\"container\">\n        <h2 className=\"has-text-centered is-size-2 mb-3\">Sign In</h2>\n        <form className=\"form\" onSubmit={submitHandler}>\n          {error && <Message type=\"danger\" msg={error}/>}\n           <Input\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.currentTarget.value)}\n            placeholder=\"Email address\"\n            label=\"Email address\"\n            type=\"text\"\n          />\n           <Input\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.currentTarget.value)}\n            placeholder=\"Password\"\n            label=\"Password\"\n            type=\"password\"\n          />\n          <p><Link to=\"/forgot-password\">Forgot Password ?</Link></p>\n          <Button text={loading ? \"Loading...\" : \"Sign In\"} className=\"is-primary is-fullwidth mt-5\" disabled={loading} />\n        </form>\n      </div>\n      </section>\n      </div>\n    );\n}","import React,{FC, useState, FormEvent, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Input } from '../UI/Input';\nimport { Button } from '../UI/Button';\nimport { Message } from '../UI/Message';\nimport { sendPasswordResetEmail,setError, setSuccess } from '../../store/actions/authActions';\nimport { RootState } from '../../store';\n\nexport const ForgotPassword: FC = () => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const { error, success } = useSelector((state: RootState) => state.auth);\n\n  useEffect(() => {\n    return () => {\n      if (error) {\n        dispatch(setError(''));\n      }\n      if (success) {\n        dispatch(setSuccess(''));\n      }\n    }\n  }, [error, success, dispatch]);\n\n  const submitHandler = async (e: FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    await dispatch(sendPasswordResetEmail(email, \"Email Sent!\"));\n    setLoading(false);\n  }\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h2 className=\"has-text-centered is-size-2 mb-3\">Reset Password</h2>\n        <form className=\"form\" onSubmit={submitHandler}>\n          {error && <Message type=\"danger\" msg={error} />}\n          {success && <Message type=\"success\" msg={success}/>}\n           <Input\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.currentTarget.value)}\n            placeholder=\"Email address\"\n            label=\"Email address\"\n            type=\"text\"\n          />\n          <Button text={loading ? \"Loading...\" : \"Send password reset email\"} className=\"is-primary is-fullwidth mt-5\" disabled={loading} />\n        </form>\n      </div>\n    </section>\n    );\n}","import React,{FC} from 'react'\nimport { motion } from 'framer-motion';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from '../UI/Button';\nimport { RootState } from '../../store';\nimport { logout } from '../../store/actions/authActions';\n\nexport const Homepage: FC = () => {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { authenticated } = useSelector((state: RootState) => state.auth);\n\n  const logoutClickHandler = () => {\n    dispatch(logout());\n  }\n\n  return (\n    <div className=\"hp__cont\"> \n      <motion.h2 className=\"hp__cont__title-1\"\n        initial={{ y: '100vh' }}\n        animate={{ y: 0 }}\n        transition={{type: 'spring', stiffness: 60, delay: 0.5}}\n      >\n        StockFolio\n      </motion.h2>\n      <motion.h5 className=\"hp__cont__title-2\"\n         initial={{ y: '100vh' }}\n         animate={{ y: 0 }}\n         transition={{type: 'spring', stiffness: 70, delay: 0.8}}\n      >\n        Welcome to the stockfolio <br/>\n        where you can build your very own <br />\n        stock market (mock)  portfolio!\n      </motion.h5>\n        <motion.div className=\"hp__cont__btn__cont\"\n          initial={{opacity: 0}}\n          animate={{opacity: 1}}\n          transition={{delay: 1.5}}\n        >\n        {!authenticated ?\n          <div className=\"\">\n            <Button text=\"Sign Up\" onClick={ () => history.push('/signup')} className=\"\"/>\n            <Button text=\"Sign In\" onClick={ () => history.push('/signin')} className=\"\"/>\n          </div>\n            :\n          <Button text=\"Sign Out\" onClick={ logoutClickHandler } />\n        }\n        </motion.div>\n    </div>\n    );\n}","import React,{FC,useEffect} from 'react'\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { setSuccess } from '../../store/actions/authActions';\nimport { RootState } from '../../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {IUsers,IStock} from '../types/type';\n\ninterface ISignInModalProps {\n  showModal: boolean;\n  setShowModal: any;\n}\n\ninterface INiftyModalProps {\n  showNiftyModal: boolean;\n  setNiftyShowModal: any;\n  users: IUsers; \n}\n\ninterface IStockItemModalProps {\n  showStockModal: boolean;\n  setStockShowModal: any;\n  data: IStock; \n}\n\nconst backdrop = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0}\n}\n\nconst modal = {\n  visible: {\n    y: \"200px\",\n    opacity: 1,\n    transition: {delay: 0.5}\n  },\n  hidden: {\n    y: \"-100vh\",\n    opacity: 0\n   }\n}\n\nexport const SignInModal: FC<ISignInModalProps> = ({ showModal }) => {\n  \n  const { user, success } = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (success) {\n      dispatch(setSuccess(''));\n    }\n  }, [success, dispatch]);\n\n  return (\n  <>\n    {showModal && (\n      <motion.div className=\"backdrop\"\n        variants={backdrop}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"hidden\"\n      >\n        <motion.div className=\"modal-1\"\n          variants={modal}\n        >\n          <p className=\"modal-1__text\">\n            {user?.firstName}, you need to verify your email address! <br />\n              If verified please refresh.\n            </p>\n        </motion.div>\n      </motion.div>\n    )}    \n    </>\n  );\n}\n\n\nexport const NiftyModal: FC<INiftyModalProps> = ({ showNiftyModal, setNiftyShowModal, users }) => {\n  \n  return (\n    <AnimatePresence>\n      {showNiftyModal && (\n        <motion.div className=\"modal-2\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{opacity: 0}}\n        >\n          <motion.div\n            className=\"modal-2__cont\"\n            initial={{ y: 50 }}\n            animate={{ y: 0 }}\n            exit={{y: 15}}\n          >\n            <motion.div   \n              onClick={() => setNiftyShowModal(false)}\n              className=\"modal-2__cont__btn\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                className=\"modal-2__cont__btn-x\"\n              >\n                <defs>\n                  <filter id=\"id-of-your-filter\">\n                    <feColorMatrix\n                      color-interpolation-filters=\"sRGB\"\n                      type=\"matrix\"\n                      values=\"0 0 0 0 0\n                              0 0.50 0 0 0\n                              0 0 0.50 0 0\n                              0 0 0 1 0 \"/>\n                  </filter>\n                  ...\n                </defs>\n                <path\n                  fill=\"#fff\"\n                  d=\"M0 0h24v24H0V0z\"\n                />\n                <path\n                  d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n                />\n              </svg>\n            </motion.div>\n            <motion.div className=\"modal-2__cont__info\">\n              <p className=\"item\">\n                Advances : {users.advances}\n              </p>\n              <p className=\"item\">\n                Declines : {users.declines}\n              </p>\n              <p className=\"item\">\n                Year High : {users.latestData[0].yHigh}\n              </p>\n              <p className=\"item\">\n                Year Low : {users.latestData[0].yLow}\n              </p>\n              <p className=\"item\">\n                Day High : {users.latestData[0].high}\n              </p>\n              <p className=\"item\">\n                Day Low : {users.latestData[0].low}\n              </p>\n              <p className=\"item\">\n                Year Returns : {users.latestData[0].yCls}\n              </p>\n              <p className=\"item\">\n                Open : {users.latestData[0].open}\n              </p>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}    \n    </AnimatePresence>\n  );\n}\n\n\nexport const StockItemModal: FC<IStockItemModalProps> = ({ showStockModal, setStockShowModal, data }) => {\n  \n  return (\n    <AnimatePresence>\n      {showStockModal && (\n        <motion.div className=\"modal-2\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{opacity: 0}}\n        >\n          <motion.div\n            className=\"modal-2__cont\"\n            initial={{ y: 50 }}\n            animate={{ y: 0 }}\n            exit={{y: 15}}\n          >\n            <motion.div   \n              onClick={() => setStockShowModal(false)}\n              className=\"modal-2__cont__btn\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                className=\"modal-2__cont__btn-x\"\n              >\n                <defs>\n                  <filter id=\"id-of-your-filter\">\n                    <feColorMatrix\n                      color-interpolation-filters=\"sRGB\"\n                      type=\"matrix\"\n                      values=\"0 0 0 0 0\n                              0 0.50 0 0 0\n                              0 0 0.50 0 0\n                              0 0 0 1 0 \"/>\n                  </filter>\n                  ...\n                </defs>\n                <path\n                  fill=\"#fff\"\n                  d=\"M0 0h24v24H0V0z\"\n                />\n                <path\n                  d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n                />\n              </svg>\n            </motion.div>\n            <motion.div className=\"modal-2__cont__info\">\n              <p className=\"modal-2__cont__info__item\">\n                {data.iislPtsChange > 0 ?\n                  <p>One day return (Pts) : <span style={{color: 'green'}}>{ data.iislPtsChange}</span></p>\n                  :\n                  <p>One day return (Pts) : <span style={{color: 'red'}}>{ data.iislPtsChange}</span></p>\n                }\n              </p>\n              <p className=\"modal-2__cont__info__item\">\n                {data.iislPtsChange > 0 ?  \n                  <p> One day return (%) : <span style={{color: 'green'}}>{ data.iislPercChange}%</span></p>\n                  :\n                  <p> One day return (%) : <span style={{color: 'red'}}>{ data.iislPercChange}%</span></p>\n                }\n              </p>\n              <p className=\"modal-2__cont__info__item\">\n                High : { data.high}\n              </p>\n              <p className=\"modal-2__cont__info__item\">\n                Low : { data.low}\n              </p>\n              <p className=\"modal-2__cont__info__item\">\n                52 week high : { data.wkhi}\n              </p>\n              <p className=\"modal-2__cont__info__item\">\n                52 week low : { data.wklo}\n              </p>\n              <p className=\"modal-2__cont__info__item\">\n                Trd Vol (shares) : { data.trdVol} \n              </p>\n              <p className=\"modal-2__cont__info__item\">\n              Trd Vol (lacs) : { data.ntP}\n              </p>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      )}    \n    </AnimatePresence>\n  );\n}\n\n","import React,{FC,useState} from 'react'\nimport { NiftyModal, StockItemModal } from '../UI/Modal';\nimport { IUsers, IStock } from '../types/type';\nimport { useDispatch } from 'react-redux';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { actionTypes } from '../../store/actions/listAction';\n// import { ReducerState } from '../../store/reducers/listReducer';\nimport {addList,deleteList } from '../../store/actions/listAction';\n// import { connect } from \"react-redux\";\n// import { Dispatch } from \"redux\";\n\ninterface INiftyModalButtonProps {\n  users: IUsers;\n}\n\ninterface IStockItemModalButtonProps {\n  data: IStock;\n  // key: number;\n}\n\ninterface IPortfolioStockModalButtonProps {\n  data: IStock;\n  symbol: string;\n}\n\nexport const PortfolioStockModalButton: FC<IPortfolioStockModalButtonProps> = ({data,symbol}) => {\n  const [showStockModal, setStockShowModal] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  // const { list } = useSelector((state: ReducerState) => state.list);\n  // console.log(list);\n  // console.log(list.length);\n  \n  return (\n    <React.Fragment>\n      <div className=\"stocks__btnCont\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          className=\"stocks__btnCont__btn\"\n          onClick={() => dispatch(addList(data))}\n        >\n          <defs>\n            <filter id=\"id-of-your-filter\">\n              <feColorMatrix\n                colorInterpolationFilters=\"sRGB\"\n                type=\"matrix\"\n                values=\"0 0 0 0 0\n                        0 0.50 0 0 0\n                        0 0 0.50 0 0\n                        0 0 0 1 0 \"/>\n            </filter>\n            ...\n          </defs>\n          <path\n            fill=\"currentColor\"\n            stroke=\"#fff\"\n            fillRule=\"nonzero\"\n            d=\"M7.91012437,3.00805567 L8,3 C8.24545989,3 8.44960837,3.17687516 8.49194433,3.41012437 L8.5,3.5 L8.5,7.5 L12.5,7.5 C12.7454599,7.5 12.9496084,7.67687516 12.9919443,7.91012437 L13,8 C13,8.24545989 12.8231248,8.44960837 12.5898756,8.49194433 L12.5,8.5 L8.5,8.5 L8.5,12.5 C8.5,12.7454599 8.32312484,12.9496084 8.08987563,12.9919443 L8,13 C7.75454011,13 7.55039163,12.8231248 7.50805567,12.5898756 L7.5,12.5 L7.5,8.5 L3.5,8.5 C3.25454011,8.5 3.05039163,8.32312484 3.00805567,8.08987563 L3,8 C3,7.75454011 3.17687516,7.55039163 3.41012437,7.50805567 L3.5,7.5 L7.5,7.5 L7.5,3.5 C7.5,3.25454011 7.67687516,3.05039163 7.91012437,3.00805567 L8,3 L7.91012437,3.00805567 Z\"\n          />\n        </svg>\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          className=\"stocks__btnCont__btn\"\n          onClick={() => dispatch(deleteList(symbol))}\n        >\n          <defs>\n            <filter id=\"id-of-your-filter\">\n              <feColorMatrix\n                colorInterpolationFilters=\"sRGB\"\n                type=\"matrix\"\n                values=\"0 0 0 0 0\n                        0 0.50 0 0 0\n                        0 0 0.50 0 0\n                        0 0 0 1 0 \"/>\n            </filter>\n            ...\n          </defs>\n          <path\n            fill=\"none\"\n            // stroke=\"#fff\"\n            d=\"M0 0h24v24H0V0z\"\n          />\n          <path\n            fill=\"#fff\"\n            // stroke=\"#fff\"\n            d=\"M18 13H6c-.55 0-1-.45-1-1s.45-1 1-1h12c.55 0 1 .45 1 1s-.45 1-1 1z\"\n          />\n        </svg>\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          data-name=\"Layer 1\"\n          viewBox=\"0 0 24 24\"\n          className=\"stocks__btnCont__btn\"\n          onClick={() => setStockShowModal(prevValue => !prevValue)}\n          // onClick={() => setShowModal(true)}\n          >\n            <defs>\n              <filter id=\"id-of-your-filter\">\n                <feColorMatrix\n                  colorInterpolationFilters=\"sRGB\"\n                  type=\"matrix\"\n                  values=\"0 0 0 0 0\n                          0 0.50 0 0 0\n                          0 0 0.50 0 0\n                          0 0 0 1 0 \"/>\n              </filter>\n              ...\n            </defs>\n          <path\n            // fill=\"currentColor\"\n            fill=\"#fff\"\n            d=\"M12,10a1,1,0,0,0-1,1v6a1,1,0,0,0,2,0V11A1,1,0,0,0,12,10Zm0-4a1.25,1.25,0,1,0,1.25,1.25A1.25,1.25,0,0,0,12,6Z\"\n          />\n        </svg>\n      </div>\n    <StockItemModal data={data}  showStockModal={showStockModal} setStockShowModal={setStockShowModal} />\n  </React.Fragment>\n);\n}\n\nexport const StockItemModalButton: FC<IStockItemModalButtonProps> = ({data}) => {\n  const [showStockModal, setStockShowModal] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  // const { list } = useSelector((state: ReducerState) => state.list);\n  // console.log('list'+list);\n  // console.log('data' +data);\n  // console.log(list.length);\n  \n  return (\n    <React.Fragment>\n      <div className=\"stocks__btnCont\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          className=\"stocks__btnCont__btn\"\n          onClick={() => dispatch(addList(data))}\n        >\n          <defs>\n            <filter id=\"id-of-your-filter\">\n              <feColorMatrix\n                colorInterpolationFilters=\"sRGB\"\n                type=\"matrix\"\n                values=\"0 0 0 0 0\n                        0 0.50 0 0 0\n                        0 0 0.50 0 0\n                        0 0 0 1 0 \"/>\n            </filter>\n            ...\n          </defs>\n          <path\n            fill=\"currentColor\"\n            stroke=\"#fff\"\n            fillRule=\"nonzero\"\n            d=\"M7.91012437,3.00805567 L8,3 C8.24545989,3 8.44960837,3.17687516 8.49194433,3.41012437 L8.5,3.5 L8.5,7.5 L12.5,7.5 C12.7454599,7.5 12.9496084,7.67687516 12.9919443,7.91012437 L13,8 C13,8.24545989 12.8231248,8.44960837 12.5898756,8.49194433 L12.5,8.5 L8.5,8.5 L8.5,12.5 C8.5,12.7454599 8.32312484,12.9496084 8.08987563,12.9919443 L8,13 C7.75454011,13 7.55039163,12.8231248 7.50805567,12.5898756 L7.5,12.5 L7.5,8.5 L3.5,8.5 C3.25454011,8.5 3.05039163,8.32312484 3.00805567,8.08987563 L3,8 C3,7.75454011 3.17687516,7.55039163 3.41012437,7.50805567 L3.5,7.5 L7.5,7.5 L7.5,3.5 C7.5,3.25454011 7.67687516,3.05039163 7.91012437,3.00805567 L8,3 L7.91012437,3.00805567 Z\"\n          />\n        </svg>\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          className=\"stocks__btnCont__btn\"\n          // onClick={() => { dispatch(deleteList(data.symbol)),console.log('SYM In Delete' +data.symbol) }}\n          onClick={ () =>  dispatch(deleteList(data.symbol))}\n        >\n          <defs>\n            <filter id=\"id-of-your-filter\">\n              <feColorMatrix\n                colorInterpolationFilters=\"sRGB\"\n                type=\"matrix\"\n                values=\"0 0 0 0 0\n                        0 0.50 0 0 0\n                        0 0 0.50 0 0\n                        0 0 0 1 0 \"/>\n            </filter>\n            ...\n          </defs>\n          <path\n            fill=\"none\"\n            // stroke=\"#fff\"\n            d=\"M0 0h24v24H0V0z\"\n          />\n          <path\n            fill=\"#fff\"\n            // stroke=\"#fff\"\n            d=\"M18 13H6c-.55 0-1-.45-1-1s.45-1 1-1h12c.55 0 1 .45 1 1s-.45 1-1 1z\"\n          />\n        </svg>\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          data-name=\"Layer 1\"\n          viewBox=\"0 0 24 24\"\n          className=\"stocks__btnCont__btn\"\n          onClick={() => setStockShowModal(prevValue => !prevValue)}\n          // onClick={() => setShowModal(true)}\n          >\n            <defs>\n              <filter id=\"id-of-your-filter\">\n                <feColorMatrix\n                  colorInterpolationFilters=\"sRGB\"\n                  type=\"matrix\"\n                  values=\"0 0 0 0 0\n                          0 0.50 0 0 0\n                          0 0 0.50 0 0\n                          0 0 0 1 0 \"/>\n              </filter>\n              ...\n            </defs>\n          <path\n            // fill=\"currentColor\"\n            fill=\"#fff\"\n            d=\"M12,10a1,1,0,0,0-1,1v6a1,1,0,0,0,2,0V11A1,1,0,0,0,12,10Zm0-4a1.25,1.25,0,1,0,1.25,1.25A1.25,1.25,0,0,0,12,6Z\"\n          />\n        </svg>\n      </div>\n    <StockItemModal data={data}  showStockModal={showStockModal} setStockShowModal={setStockShowModal} />\n  </React.Fragment>\n);\n}\n\nexport const NiftyModalButton: FC<INiftyModalButtonProps> = ({users}) => {\n  const [showNiftyModal, setNiftyShowModal] = useState<boolean>(false);\n\n  return (\n    <React.Fragment>\n      <div className=\"stocks__btnCont\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          data-name=\"Layer 1\"\n          viewBox=\"0 0 24 24\"\n          className=\"stocks__btnCont__btn\"\n          onClick={() => setNiftyShowModal(prevValue => !prevValue)}\n          // onClick={() => setShowModal(true)}\n          >\n            <defs>\n              <filter id=\"id-of-your-filter\">\n                <feColorMatrix\n                  colorInterpolationFilters=\"sRGB\"\n                  type=\"matrix\"\n                  values=\"0 0 0 0 0\n                          0 0.50 0 0 0\n                          0 0 0.50 0 0\n                          0 0 0 1 0 \"/>\n              </filter>\n              ...\n            </defs>\n          <path\n            // fill=\"currentColor\"\n            fill=\"#fff\"\n            d=\"M12,10a1,1,0,0,0-1,1v6a1,1,0,0,0,2,0V11A1,1,0,0,0,12,10Zm0-4a1.25,1.25,0,1,0,1.25,1.25A1.25,1.25,0,0,0,12,6Z\"\n          />\n        </svg>\n      </div>\n      <NiftyModal users={users}  showNiftyModal={showNiftyModal} setNiftyShowModal={setNiftyShowModal} />\n    </React.Fragment>\n);\n}\n\n\n// const MapStateToProps = (state: ReducerState) => {\n//   return {\n//     list: state.list.list\n//   };\n// };\n\n// const MapDispatchToProps = (dispatch: Dispatch<RootAction>) => ({\n//   addToDo: (item: any) => dispatch({ type: actionTypes.ADD, payload: item }),\n//   deleteToDo: (idx: number) => dispatch({ type: actionTypes.DELETE, payload: idx })\n// });\n\n// export default connect(\n//   MapStateToProps,\n//   MapDispatchToProps\n// )(StockItemModalButton);","import React,{FC} from 'react'\nimport { IStock } from '../types/type';\nimport {StockItemModalButton} from '../UI/ModalButton';\n\ninterface IStockItemProps {\n  data: IStock;\n  key: number\n}\n\nconst StockItem: FC<IStockItemProps> = ({ data, key }) => {\n   /* tslint:disable-next-line */ // @ts-ignore\n  // const a = (data).JSON.stringify\n  // console.log(a);\n  return (\n    <div className=\"stockItem__cont\">\n      <div className=\"stockItem__cont-1\">\n        <p className=\"stockItem__cont-1__secA\">\n          {data.symbol}\n        </p>\n        <div className=\"stockItem__cont-1__secB\">\n          <p className=\"stockItem__cont-1__secB-1\">\n            {data.dayEndClose === undefined ?\n              `Previous Close: ${data.dayEndClose}` :\n              `Previous Close : N/A`\n            }\n          </p>\n          <p className=\"stockItem__cont-1__secB-2\">\n            Open: {data.open}\n          </p>\n        </div>\n        <div className=\"stockItem__cont-1__secC\">\n            { data.ptsC > 0 ?  \n              <>\n                <div className=\"stockItem__cont-1__secC__pts\">\n                  <p className=\"triangle--green\" >\n                    &#9650;\n                  </p>\n                  <p style={{color: 'green'}} >\n                    {data.ptsC}\n                  </p>\n                </div>\n                <p style={{color: 'green'}} className=\"stockItem__cont-1__secC__per\">\n                  ({data.per}%)\n                </p> \n              </>\n              :\n              <>\n                 <div className=\"stockItem__cont-1__secC__pts\">\n                  <p className=\"triangle--red\"  >\n                    &#9650;\n                  </p>\n                  <p style={{color: 'red'}}  >\n                    {data.ptsC}\n                  </p>\n                </div>\n                <p style={{color: 'red'}}  className=\"stockItem__cont-1__secC__per\">\n                  ({data.per}%)\n                </p>\n              </>\n            }\n        </div>\n      </div>\n      <div className=\"stockItem__cont-2\">\n        <p className=\"stockItem__cont-2__secA\">\n          {data.ltP}\n        </p>\n        <div className=\"stockItem__cont-2__secB\">\n          {data.yPC > 0 ?\n            <p>52 weeks return : <span style={{color: 'green'}}>{ data.yPC}</span></p>\n            :\n            <p>52 weeks return : <span style={{color: 'red'}}>{ data.yPC}</span></p>\n          }\n        </div>\n      </div>\n      <StockItemModalButton data={data} />\n    </div>\n  );\n}\n\nexport default StockItem;","import React,{FC} from 'react'\nimport { IUsers,IStock } from '../types/type';\nimport nse from '../../icons/nse.jpg';\n// import { motion } from 'framer-motion';\nimport StockItem from './StockItem';\nimport {NiftyModalButton} from '../UI/ModalButton';\n\ninterface IStocksProps {\n  users: IUsers\n}\n\nconst Stocks: FC<IStocksProps> = ({ users }) => {\n\n  console.log(users.data.map((item: any)  => item));\n  return (\n    <div className=\"stocks\">\n      <div className=\"stocks__nifty__cont\">\n        <div className=\"stocks__nifty__cont-1\">\n          <img src={nse} alt=\"NSE\" className=\"stocks__nifty__cont-1__img\"/>\n          <h1 className=\"stocks__nifty__cont-1__title\">\n            NIFTY 50\n          </h1>\n          <div className=\"stocks__nifty__cont-1__ticker\">\n            {users.latestData[0].ch > 0 ?  \n              <>\n                <div className=\"stocks__nifty__cont-1__ticker__ch\">\n                <p className=\"triangle--green\" >\n                    &#9650;\n                  </p>\n                  <p style={{color: 'green'}} >\n                    {users.latestData[0].ch}\n                  </p>\n                </div>\n                <p style={{color: 'green'}} className=\"stocks__nifty__cont-1__ticker__per\">\n                  ({users.latestData[0].per}%)\n                </p> \n              </>\n              :\n              <>\n                <div className=\"stocks__nifty__cont-1__ticker__ch\">\n                  <p className=\"triangle--red\">\n                    &#9650;\n                  </p>\n                  <p style={{color: 'red'}}  >\n                    {users.latestData[0].ch}\n                  </p>\n                </div>\n                <p style={{color: 'red'}}  className=\"stocks__nifty__cont-1__ticker__per\">\n                  ({users.latestData[0].per}%)\n                </p>\n              </>\n            }\n          </div>\n        </div>\n        <div className=\"stocks__nifty__cont-2\">\n          <p className=\"stocks__nifty__cont-2__ltp\">\n            {users.latestData[0].ltp}\n          </p>\n          <p className=\"stocks__nifty__cont-2__time\">\n          Last Updated: {users.time}\n          </p>\n        </div>\n        <NiftyModalButton users={users}/>\n      </div>\n      <div className=\"stocks__stockItem__cont\">\n        {users.data.map((data: IStock,key:number) => <StockItem data={data} key={key}/>\n        )}\n      </div>\n      \n    </div>\n    );\n}\n\nexport default Stocks;","import React,{FC} from 'react'\n// import { IStock } from '../types/type';\nimport {PortfolioStockModalButton} from '../UI/ModalButton';\nimport { IList } from '../types/type';\n\ninterface IStockItemProps {\n  list: IList;\n  symbol: string;\n  key: number\n}\n\nconst ListItem: FC<IStockItemProps> = ({ list,symbol }) => {\n  // console.log('symbol' + symbol);\n  return (\n    <div className=\"stockItem__cont\">\n      <div className=\"stockItem__cont-1\">\n        <p className=\"stockItem__cont-1__secA\">\n          {list.symbol}\n        </p>\n        <div className=\"stockItem__cont-1__secB\">\n          <p className=\"stockItem__cont-1__secB-1\">\n            {list.dayEndClose === undefined ?\n              `Previous Close: ${list.dayEndClose}` :\n              `Previous Close : N/A`\n            }\n            \n          </p>\n          <p className=\"stockItem__cont-1__secB-2\">\n            Open: {list.open}\n          </p>\n        </div>\n        <div className=\"stockItem__cont-1__secC\">\n            { list.ptsC > 0 ?  \n              <>\n                <div className=\"stockItem__cont-1__secC__pts\">\n                  <p className=\"triangle--green\" >\n                    &#9650;\n                  </p>\n                  <p style={{color: 'green'}} >\n                    {list.ptsC}\n                  </p>\n                </div>\n                <p style={{color: 'green'}} className=\"stockItem__cont-1__secC__per\">\n                  ({list.per}%)\n                </p> \n              </>\n              :\n              <>\n                 <div className=\"stockItem__cont-1__secC__pts\">\n                  <p className=\"triangle--red\"  >\n                    &#9650;\n                  </p>\n                  <p style={{color: 'red'}}  >\n                    {list.ptsC}\n                  </p>\n                </div>\n                <p style={{color: 'red'}}  className=\"stockItem__cont-1__secC__per\">\n                  ({list.per}%)\n                </p>\n              </>\n            }\n        </div>\n      </div>\n      <div className=\"stockItem__cont-2\">\n        <p className=\"stockItem__cont-2__secA\">\n          {list.ltP}\n        </p>\n        <div className=\"stockItem__cont-2__secB\">\n          {list.yPC > 0 ?\n            <p>52 weeks return : <span style={{color: 'green'}}>{ list.yPC}</span></p>\n            :\n            <p>52 weeks return : <span style={{color: 'red'}}>{ list.yPC}</span></p>\n          }\n        </div>\n      </div>\n      <PortfolioStockModalButton data={list} symbol={ symbol}/>\n    </div>\n  );\n}\n\nexport default ListItem;","import React,{FC} from 'react'\nimport { IUsers,IUserData } from '../types/type';\nimport { useSelector } from 'react-redux';\nimport { ReducerState } from '../../store/reducers/listReducer';\nimport ListItem from './ListItem';\nimport { IList } from '../types/type';\n\ninterface IPortfolioProps {\n  users: IUsers;\n  user: IUserData;\n}\n\nconst Portfolio: FC<IPortfolioProps> = ({ user }) => {\n  // const [stockList, setStockList] = useState<any>('');\n  const { list } = useSelector((state: ReducerState) => state.list);\n  \n  return (\n    <>\n      {list.length > 0 ? \n        <div className=\"pf__cont\">\n        <div className=\"pf__cont__secA\">\n          <h1> {user.firstName}, Welcome to StockFolio!</h1>\n        </div>\n          <div className=\"pf__cont__secB\">\n            \n            {list.map((list: IList, key: number) => <ListItem list={list} symbol={ list.symbol} key={ key}/>\n        )}\n          </div>\n        </div>\n        :\n        <div className=\"pf__cont\">\n          <div className=\"pf__cont__secA\">\n            <h1> {user.firstName}, Welcome to StockFolio!</h1>\n          </div>\n          <div className=\"pf__cont__secB\">\n              <span>\n                  You do not own any stocks on our\n                  platform. To start your portfolio add upto 10 stocks according \n                  to your interest!\n              </span>\n          </div>\n        </div>\n      }\n    </>\n  );\n}\n\nexport default Portfolio;","import React, { FC, useEffect, useLayoutEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios'\nimport { IUsers } from '../types/type';\nimport { setSuccess } from '../../store/actions/authActions';\nimport { RootState } from '../../store';\nimport { SignInModal } from '../UI/Modal';\nimport Stocks from '../sections/Stocks';\nimport Portfolio from '../sections/Portfolio';\n\nexport const Dashboard: FC = () => {\n  const { user, needVerification, success } = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState<boolean>(true);\n  const [users, setUserList] = useState<IUsers>(undefined);\n\n  useEffect(() => {\n    if (success) {\n      dispatch(setSuccess(''));\n    }\n  }, [success, dispatch]);\n\n  useLayoutEffect(() => {\n    axios.get('http://localhost:4000/nse/get_index_stocks?symbol=nifty', {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((response) => {\n        setUserList(response.data);\n      });\n  }, []);\n  // useEffect(() => {\n  //   axios.get('http://localhost:4000/nse/get_index_stocks?symbol=nifty', {\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   })\n  //     .then((response) => {\n  //       setUserList(response.data);\n  //       // console.log(response.data);\n  //     });\n  // }, [users])\n\n  if (users !== undefined) {\n    console.log(user);\n    // console.log(user.email);\n    // console.log(user.firstName);\n    // console.log(user.id);\n  }\n  ;\n\n  return (\n    <>\n      {needVerification && <SignInModal showModal={showModal} setShowModal={setShowModal} />}\n      <div className=\"db\">\n        <div className=\"db__cont-1\">\n          {users && <Stocks users={users} />}\n        </div>\n        <div className=\"db__cont-2\">\n          <Portfolio users={users} user={user} />\n        </div>\n      </div>\n    </>\n  );\n}","import React, {FC} from 'react'\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\n\nimport { RootState } from '../../store';\n\ninterface IPrivateRouteProps extends RouteProps {\n  component: any;\n  showModal: any;\n  setShowModal: any;\n}\n\nexport const PrivateRoute: FC<IPrivateRouteProps> = ({ component: Component,showModal, setShowModal, ...rest}) => {\n  const { authenticated } =  useSelector((state: RootState) => state.auth);\n  \n  return (\n    <Route {...rest} render={props => authenticated ? <Component {...props} showModal={showModal} setShowModal={setShowModal} /> : <Redirect to='/signin'/>}/>\n    );\n}\n","import React, {FC} from 'react'\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\n\nimport { RootState } from '../../store';\n\ninterface IPublicRouteProps extends RouteProps {\n  component: any;\n}\n\nexport const PublicRoute: FC<IPublicRouteProps> = ({ component: Component, ...rest}) => {\n  const { authenticated } =  useSelector((state: RootState) => state.auth);\n  \n  return (\n    <Route {...rest} render={props => !authenticated ? <Component {...props} /> : <Redirect to='/dashboard'/>}/>\n    );\n}\n\n","import React, { FC} from 'react'\n\nexport const Loader: FC = () => {\n  return (\n    <div className=\"loader-wrapper\">\n      <div className=\"custom-loader\"/>  \n    </div>\n    );\n}","import React, {useEffect, useState } from 'react';\nimport './firebase/config'\nimport './App.css'\n// import { AnimatePresence } from 'framer-motion';\nimport ThemeProvider from './components/theme/Theme';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\nimport {Header} from './components/sections/Header';\nimport {SignUp} from './components/pages/SignUp';\nimport {SignIn} from './components/pages/SignIn';\nimport {ForgotPassword} from './components/pages/ForgotPassword';\nimport {Homepage} from './components/pages/HomePage';\nimport {Dashboard} from './components/pages/Dashboard';\nimport {PrivateRoute} from './components/auth/PrivateRoute';\nimport {PublicRoute} from './components/auth/PublicRoute';\nimport {Loader} from './components/UI/Loader';\nimport firebase from './firebase/config';\nimport { getUserById, setLoading, setNeedVerification } from './store/actions/authActions';\nimport { RootState } from './store';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state: RootState) => state.auth);\n  const [showModal, setShowModal] = useState<boolean>(true);\n\n\n\n  useEffect(() => {\n    dispatch(setLoading(true));\n    const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\n      if(user) {\n        dispatch(setLoading(true));\n        await dispatch(getUserById(user.uid));\n        if(!user.emailVerified) {\n          dispatch(setNeedVerification());\n        }\n      }\n      dispatch(setLoading(false));\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [dispatch]);\n\n  if(loading) {\n    return <Loader />;\n  }\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider>\n      {/* <AnimatePresence exitBeforeEnter={true} onExitComplete={() => setShowModal(false)}> */}\n        <Header />\n        <Switch>\n          <PublicRoute path=\"/\" component={Homepage} exact={true} />\n          <PublicRoute path=\"/signup\" component={SignUp} exact={true} />\n          <PublicRoute path=\"/signin\" component={SignIn} exact={true} />\n          <PublicRoute path=\"/forgot-password\" component={ForgotPassword} exact={true} />\n          <PrivateRoute path=\"/dashboard\" component={Dashboard} showModal={showModal} setShowModal={setShowModal} exact={true} />\n          </Switch>\n      {/* </AnimatePresence> */}\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n// import Signup from './views/Auth/components/Signup';\n// const options = {\n//   // headers: {\n//   //   'x-rapidapi-host': 'twelve-data1.p.rapidapi.com',\n//   //   'x-rapidapi-key': '5295380425msh8f4efac1b3a4577p19cb1fjsn1025dd12f63c',\n    \n//   // },\n//   method: 'GET',\n//   // params: {symbol: 'AMZN', interval: '1day', outputsize: '30', format: 'json'},\n//   url: 'http://localhost:4000/nse/get_index_stocks?symbol=nifty',\n\n// };\n\n// axios.get<IOptions[]>(options).then(function (response) {\n//   console.log(response.data);\n//   console.log(response.data);\n// }).catch(function (error) {\n// \tconsole.error(error);\n// });\n// console.log()\n","import { AuthAction, IAuthState, SET_USER, SIGN_OUT, SET_LOADING, SET_ERROR, NEED_VERIFICATION, SET_SUCCESS } from '../types';\n\nconst initialState: IAuthState = {\n  user: null,\n  authenticated: false,\n  loading: false,\n  error: '',\n  needVerification: false,\n  success: ''\n}\n\nexport default (state = initialState, action: AuthAction) => {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        authenticated: true\n      }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      }\n    case SIGN_OUT:\n      return {\n        ...state,\n        user: null,\n        authenticated: false,\n        loading: false\n      }\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    case NEED_VERIFICATION:\n      return {\n        ...state,\n        needVerification: true\n      }\n    case SET_SUCCESS:\n      return {\n        ...state,\n        success: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { rootReducer } from '../index';\nimport { actionTypes, todoActions } from \"../actions/listAction\";\nimport {StateType, ActionType } from \"typesafe-actions\";\nexport type RootAction = ActionType<typeof todoActions>;\nexport type ReducerState = StateType<typeof rootReducer>;\n\ninterface IStock {\n  list: any\n}\n\ninterface IStocksModel {\n  list: IStock[];\n}\n\nexport const initialState: IStocksModel = {\n  list: []\n};\n\nexport const todoReducer = (state: IStocksModel = initialState, action:  RootAction) => {\n  switch (action.type) {\n    case actionTypes.ADD: {\n       // tslint:disable-next-line\n       if (state.list.length > 9) {\n        return {\n          ...state,\n        }\n       }\n       else {\n        let temp = 0;\n        /* tslint:disable-next-line */ // @ts-ignore\n         for (let i = 0; i < state.list.length; i++) { \n          if (state.list[i] === action.payload) {\n            temp = temp + 1;\n          }\n        }\n         if (temp === 0) {\n           return {\n             ...state,\n             list: [...state.list, action.payload]\n           }\n         }\n         else {\n           return {\n             ...state,\n           }\n         }\n      }\n    }\n    case actionTypes.DELETE: {\n      const oldList = [...state.list];\n      if (oldList.length < 2) {\n        oldList.splice(action.payload, 1);\n        const newList = oldList;\n        return {\n          ...state,\n          list: newList\n        };\n      }\n      else\n      {\n        // tslint:disable-next-line\n        for (let i = 0; i < oldList.length; i++) {\n          /* tslint:disable-next-line */ // @ts-ignore\n          if (oldList[i].symbol === action.payload) {\n            /* tslint:disable-next-line */ // @ts-ignore\n            return oldList.splice(i,1)[0];\n          }\n        }\n        return {\n          ...state,\n            list: oldList\n          };\n        }\n      }\n      default:\n        return state;\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import {IStockListState, StockListAction,IStockItemList, IStockItem, ADD_STOCK } from '../types';\n\n// const initialState: IStockListState = {\n//   lists: { },\n//   listIdToDelete: '',\n//   listToEdit: null,\n//   listById: null,\n//   selectedList: null,\n//   taskToDelete:  null,\n//   taskToEdit: null,\n// }\n\n// // Helper Function\n\n// const getListFromLS = (): IStockItemList => {\n//   if (localStorage.getItem('stock_list')) {\n//     return JSON.parse(localStorage.getItem('stock_list') || '{}');\n//   }\n//   return {};\n// }\n\n// const saveStockListToLS = (stockList: IStockItemList) => {\n//   localStorage.setItem('stocK_list', JSON.stringify(stockList));\n// }\n\n// export default (state = initialState, action: StockListAction): IStockListState => {\n//   const listsFromLS = getListFromLS();\n  \n//   switch (action.type) {\n//     case ADD_STOCK:\n//       const clonedListsFromLS = { ...listsFromLS };\n//       clonedListsFromLS[action.payload.symbol] = action.payload;\n    \n//     default:\n//       return state;\n//   }\n// }","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport authReducer from './reducers/authReducer';\nimport { todoReducer } from './reducers/listReducer';\n// import listReducer from './reducers/listReducer';\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  list: todoReducer\n  // list: listReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/Index.css';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}